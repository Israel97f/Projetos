;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 13/01/2021 00:11:47
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x2852      	GOTO       82
_UART1_Write:
;__Lib_UART_b21.c,37 :: 		
;__Lib_UART_b21.c,38 :: 		
L_UART1_Write3:
0x0003	0x1683      	BSF        STATUS, 5
0x0004	0x1303      	BCF        STATUS, 6
0x0005	0x1898      	BTFSC      TXSTA, 1
0x0006	0x2809      	GOTO       L_UART1_Write4
;__Lib_UART_b21.c,39 :: 		
0x0007	0x0000      	NOP
0x0008	0x2803      	GOTO       L_UART1_Write3
L_UART1_Write4:
;__Lib_UART_b21.c,40 :: 		
0x0009	0x1283      	BCF        STATUS, 5
0x000A	0x0824      	MOVF       FARG_UART1_Write_data_, 0
0x000B	0x0099      	MOVWF      TXREG
;__Lib_UART_b21.c,41 :: 		
L_end_UART1_Write:
0x000C	0x0008      	RETURN
; end of _UART1_Write
_UART1_Init:
;__Lib_UART_b21.c,2 :: 		
;__Lib_UART_b21.c,5 :: 		
0x000D	0x1683      	BSF        STATUS, 5
0x000E	0x1303      	BCF        STATUS, 6
0x000F	0x1698      	BSF        TXSTA, 5
;__Lib_UART_b21.c,6 :: 		
0x0010	0x3090      	MOVLW      144
0x0011	0x1283      	BCF        STATUS, 5
0x0012	0x0098      	MOVWF      RCSTA
;__Lib_UART_b21.c,7 :: 		
0x0013	0x1683      	BSF        STATUS, 5
0x0014	0x1486      	BSF        TRISB1_bit, BitPos(TRISB1_bit+0)
;__Lib_UART_b21.c,8 :: 		
0x0015	0x1106      	BCF        TRISB2_bit, BitPos(TRISB2_bit+0)
;__Lib_UART_b21.c,9 :: 		
L_UART1_Init0:
0x0016	0x1283      	BCF        STATUS, 5
0x0017	0x1E8C      	BTFSS      PIR1, 5
0x0018	0x281C      	GOTO       L_UART1_Init1
;__Lib_UART_b21.c,10 :: 		
0x0019	0x081A      	MOVF       RCREG, 0
0x001A	0x00F0      	MOVWF      R0
0x001B	0x2816      	GOTO       L_UART1_Init0
L_UART1_Init1:
;__Lib_UART_b21.c,11 :: 		
L_end_UART1_Init:
0x001C	0x0008      	RETURN
; end of _UART1_Init
_tx_func:
;tranmissor_433_mhz.c,71 :: 		void tx_func(char comand, char value)
;tranmissor_433_mhz.c,74 :: 		UART1_Write(0xFF);                          //byte de start
0x001D	0x30FF      	MOVLW      255
0x001E	0x1283      	BCF        STATUS, 5
0x001F	0x1303      	BCF        STATUS, 6
0x0020	0x00A4      	MOVWF      FARG_UART1_Write_data_
0x0021	0x2003      	CALL       _UART1_Write
;tranmissor_433_mhz.c,75 :: 		delay_ms(times);                               //aguarda
0x0022	0x301A      	MOVLW      26
0x0023	0x00FC      	MOVWF      R12
0x0024	0x30F8      	MOVLW      248
0x0025	0x00FD      	MOVWF      R13
L_tx_func9:
0x0026	0x0BFD      	DECFSZ     R13, 1
0x0027	0x2826      	GOTO       L_tx_func9
0x0028	0x0BFC      	DECFSZ     R12, 1
0x0029	0x2826      	GOTO       L_tx_func9
0x002A	0x0000      	NOP
;tranmissor_433_mhz.c,76 :: 		UART1_Write(comand);                        //envia comando
0x002B	0x0822      	MOVF       FARG_tx_func_comand, 0
0x002C	0x00A4      	MOVWF      FARG_UART1_Write_data_
0x002D	0x2003      	CALL       _UART1_Write
;tranmissor_433_mhz.c,77 :: 		delay_ms(times);                               //aguarda
0x002E	0x301A      	MOVLW      26
0x002F	0x00FC      	MOVWF      R12
0x0030	0x30F8      	MOVLW      248
0x0031	0x00FD      	MOVWF      R13
L_tx_func10:
0x0032	0x0BFD      	DECFSZ     R13, 1
0x0033	0x2832      	GOTO       L_tx_func10
0x0034	0x0BFC      	DECFSZ     R12, 1
0x0035	0x2832      	GOTO       L_tx_func10
0x0036	0x0000      	NOP
;tranmissor_433_mhz.c,78 :: 		UART1_Write(value);                         //envia valor do dado
0x0037	0x0823      	MOVF       FARG_tx_func_value, 0
0x0038	0x00A4      	MOVWF      FARG_UART1_Write_data_
0x0039	0x2003      	CALL       _UART1_Write
;tranmissor_433_mhz.c,79 :: 		delay_ms(times);                               //aguarda
0x003A	0x301A      	MOVLW      26
0x003B	0x00FC      	MOVWF      R12
0x003C	0x30F8      	MOVLW      248
0x003D	0x00FD      	MOVWF      R13
L_tx_func11:
0x003E	0x0BFD      	DECFSZ     R13, 1
0x003F	0x283E      	GOTO       L_tx_func11
0x0040	0x0BFC      	DECFSZ     R12, 1
0x0041	0x283E      	GOTO       L_tx_func11
0x0042	0x0000      	NOP
;tranmissor_433_mhz.c,80 :: 		UART1_Write(~(char)(comand+value));         //faz checksum
0x0043	0x0823      	MOVF       FARG_tx_func_value, 0
0x0044	0x0722      	ADDWF      FARG_tx_func_comand, 0
0x0045	0x00A4      	MOVWF      FARG_UART1_Write_data_
0x0046	0x09A4      	COMF       FARG_UART1_Write_data_, 1
0x0047	0x2003      	CALL       _UART1_Write
;tranmissor_433_mhz.c,81 :: 		delay_ms(times);
0x0048	0x301A      	MOVLW      26
0x0049	0x00FC      	MOVWF      R12
0x004A	0x30F8      	MOVLW      248
0x004B	0x00FD      	MOVWF      R13
L_tx_func12:
0x004C	0x0BFD      	DECFSZ     R13, 1
0x004D	0x284C      	GOTO       L_tx_func12
0x004E	0x0BFC      	DECFSZ     R12, 1
0x004F	0x284C      	GOTO       L_tx_func12
0x0050	0x0000      	NOP
;tranmissor_433_mhz.c,84 :: 		} //end tx_func
L_end_tx_func:
0x0051	0x0008      	RETURN
; end of _tx_func
_main:
;tranmissor_433_mhz.c,30 :: 		void main()
;tranmissor_433_mhz.c,33 :: 		TRISB = 0xFB;                               //configura RB2 como saída (TX)
0x0052	0x30FB      	MOVLW      251
0x0053	0x1683      	BSF        STATUS, 5
0x0054	0x1303      	BCF        STATUS, 6
0x0055	0x0086      	MOVWF      TRISB
;tranmissor_433_mhz.c,34 :: 		UART1_Init (1200);                          //inicializa UART1 com 1200 baud rate
0x0056	0x30CF      	MOVLW      207
0x0057	0x0099      	MOVWF      SPBRG
0x0058	0x1118      	BCF        TXSTA, 2
0x0059	0x200D      	CALL       _UART1_Init
;tranmissor_433_mhz.c,35 :: 		delay_ms(100);                              //aguarda estabilizar
0x005A	0x3003      	MOVLW      3
0x005B	0x00FB      	MOVWF      R11
0x005C	0x3008      	MOVLW      8
0x005D	0x00FC      	MOVWF      R12
0x005E	0x3077      	MOVLW      119
0x005F	0x00FD      	MOVWF      R13
L_main0:
0x0060	0x0BFD      	DECFSZ     R13, 1
0x0061	0x2860      	GOTO       L_main0
0x0062	0x0BFC      	DECFSZ     R12, 1
0x0063	0x2860      	GOTO       L_main0
0x0064	0x0BFB      	DECFSZ     R11, 1
0x0065	0x2860      	GOTO       L_main0
;tranmissor_433_mhz.c,38 :: 		while(1)                                    //Loop Infinito
L_main1:
;tranmissor_433_mhz.c,40 :: 		if(!RB0_bit) tx_func('A',1);             //se RB0 em LOW, envia comando 'A' e dado 1
0x0066	0x1806      	BTFSC      RB0_bit, BitPos(RB0_bit+0)
0x0067	0x286D      	GOTO       L_main3
0x0068	0x3041      	MOVLW      65
0x0069	0x00A2      	MOVWF      FARG_tx_func_comand
0x006A	0x3001      	MOVLW      1
0x006B	0x00A3      	MOVWF      FARG_tx_func_value
0x006C	0x201D      	CALL       _tx_func
L_main3:
;tranmissor_433_mhz.c,42 :: 		if(!RB3_bit) tx_func('B',1);             //se RB1 em LOW, envia comando 'B' e dado 1
0x006D	0x1986      	BTFSC      RB3_bit, BitPos(RB3_bit+0)
0x006E	0x2874      	GOTO       L_main4
0x006F	0x3042      	MOVLW      66
0x0070	0x00A2      	MOVWF      FARG_tx_func_comand
0x0071	0x3001      	MOVLW      1
0x0072	0x00A3      	MOVWF      FARG_tx_func_value
0x0073	0x201D      	CALL       _tx_func
L_main4:
;tranmissor_433_mhz.c,44 :: 		if(!RB5_bit) tx_func('C',1);             //se RB2 em LOW, envia comando 'C' e dado 1
0x0074	0x1A86      	BTFSC      RB5_bit, BitPos(RB5_bit+0)
0x0075	0x287B      	GOTO       L_main5
0x0076	0x3043      	MOVLW      67
0x0077	0x00A2      	MOVWF      FARG_tx_func_comand
0x0078	0x3001      	MOVLW      1
0x0079	0x00A3      	MOVWF      FARG_tx_func_value
0x007A	0x201D      	CALL       _tx_func
L_main5:
;tranmissor_433_mhz.c,46 :: 		if(!RB6_bit) tx_func('D',1);             //se RB3 em LOW, envia comando 'D' e dado 1
0x007B	0x1B06      	BTFSC      RB6_bit, BitPos(RB6_bit+0)
0x007C	0x2882      	GOTO       L_main6
0x007D	0x3044      	MOVLW      68
0x007E	0x00A2      	MOVWF      FARG_tx_func_comand
0x007F	0x3001      	MOVLW      1
0x0080	0x00A3      	MOVWF      FARG_tx_func_value
0x0081	0x201D      	CALL       _tx_func
L_main6:
;tranmissor_433_mhz.c,48 :: 		if(!RB4_bit) tx_func('E',1);             //se RB4 em LOW, envia comando 'E' e dado 1
0x0082	0x1A06      	BTFSC      RB4_bit, BitPos(RB4_bit+0)
0x0083	0x2889      	GOTO       L_main7
0x0084	0x3045      	MOVLW      69
0x0085	0x00A2      	MOVWF      FARG_tx_func_comand
0x0086	0x3001      	MOVLW      1
0x0087	0x00A3      	MOVWF      FARG_tx_func_value
0x0088	0x201D      	CALL       _tx_func
L_main7:
;tranmissor_433_mhz.c,51 :: 		if(RB0_bit & RB3_bit & RB5_bit & RB6_bit & RB4_bit)     //  se todas as portas estãoem HIGH evia o dado 0
0x0089	0x1C06      	BTFSS      RB0_bit, BitPos(RB0_bit+0)
0x008A	0x288F      	GOTO       L__main14
0x008B	0x1D86      	BTFSS      RB3_bit, BitPos(RB3_bit+0)
0x008C	0x288F      	GOTO       L__main14
0x008D	0x1403      	BSF        STATUS, 0
0x008E	0x2890      	GOTO       L__main15
L__main14:
0x008F	0x1003      	BCF        STATUS, 0
L__main15:
0x0090	0x1C03      	BTFSS      STATUS, 0
0x0091	0x2896      	GOTO       L__main16
0x0092	0x1E86      	BTFSS      RB5_bit, BitPos(RB5_bit+0)
0x0093	0x2896      	GOTO       L__main16
0x0094	0x1470      	BSF        R0, 0
0x0095	0x2897      	GOTO       L__main17
L__main16:
0x0096	0x1070      	BCF        R0, 0
L__main17:
0x0097	0x1C70      	BTFSS      R0, 0
0x0098	0x289D      	GOTO       L__main18
0x0099	0x1F06      	BTFSS      RB6_bit, BitPos(RB6_bit+0)
0x009A	0x289D      	GOTO       L__main18
0x009B	0x1403      	BSF        STATUS, 0
0x009C	0x289E      	GOTO       L__main19
L__main18:
0x009D	0x1003      	BCF        STATUS, 0
L__main19:
0x009E	0x1C03      	BTFSS      STATUS, 0
0x009F	0x28A4      	GOTO       L__main20
0x00A0	0x1E06      	BTFSS      RB4_bit, BitPos(RB4_bit+0)
0x00A1	0x28A4      	GOTO       L__main20
0x00A2	0x1470      	BSF        R0, 0
0x00A3	0x28A5      	GOTO       L__main21
L__main20:
0x00A4	0x1070      	BCF        R0, 0
L__main21:
0x00A5	0x1C70      	BTFSS      R0, 0
0x00A6	0x28B7      	GOTO       L_main8
;tranmissor_433_mhz.c,53 :: 		tx_func('A',0);
0x00A7	0x3041      	MOVLW      65
0x00A8	0x00A2      	MOVWF      FARG_tx_func_comand
0x00A9	0x01A3      	CLRF       FARG_tx_func_value
0x00AA	0x201D      	CALL       _tx_func
;tranmissor_433_mhz.c,54 :: 		tx_func('B',0);
0x00AB	0x3042      	MOVLW      66
0x00AC	0x00A2      	MOVWF      FARG_tx_func_comand
0x00AD	0x01A3      	CLRF       FARG_tx_func_value
0x00AE	0x201D      	CALL       _tx_func
;tranmissor_433_mhz.c,55 :: 		tx_func('C',0);
0x00AF	0x3043      	MOVLW      67
0x00B0	0x00A2      	MOVWF      FARG_tx_func_comand
0x00B1	0x01A3      	CLRF       FARG_tx_func_value
0x00B2	0x201D      	CALL       _tx_func
;tranmissor_433_mhz.c,56 :: 		tx_func('D',0);
0x00B3	0x3044      	MOVLW      68
0x00B4	0x00A2      	MOVWF      FARG_tx_func_comand
0x00B5	0x01A3      	CLRF       FARG_tx_func_value
0x00B6	0x201D      	CALL       _tx_func
;tranmissor_433_mhz.c,57 :: 		}
L_main8:
;tranmissor_433_mhz.c,60 :: 		} //end while
0x00B7	0x2866      	GOTO       L_main1
;tranmissor_433_mhz.c,62 :: 		} //end main
L_end_main:
0x00B8	0x28B8      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0003      [10]    _UART1_Write
0x000D      [16]    _UART1_Init
0x001D      [53]    _tx_func
0x0052     [103]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0006       [0]    RB0_bit
0x0006       [0]    RB5_bit
0x0006       [0]    RB6_bit
0x0006       [0]    RB3_bit
0x0006       [0]    RB4_bit
0x000A       [1]    PCLATH
0x000C       [1]    PIR1
0x0018       [1]    RCSTA
0x0019       [1]    TXREG
0x001A       [1]    RCREG
0x0020       [2]    ___DoICPAddr
0x0022       [1]    FARG_tx_func_comand
0x0023       [1]    FARG_tx_func_value
0x0024       [1]    FARG_UART1_Write_data_
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0086       [1]    TRISB
0x0086       [0]    TRISB2_bit
0x0086       [0]    TRISB1_bit
0x0098       [1]    TXSTA
0x0099       [1]    SPBRG
